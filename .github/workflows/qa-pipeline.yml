name: Fanvue QA Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests every 6 hours
    - cron: '0 */6 * * *'

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm ci
        npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        BROWSER: ${{ matrix.browser }}
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.browser }}
        path: |
          test-results/
          playwright-report/
          screenshots/
    
    - name: Upload to TestRail
      if: always()
      run: |
        npm run testrail:upload
      env:
        TESTRAIL_URL: ${{ secrets.TESTRAIL_URL }}
        TESTRAIL_USERNAME: ${{ secrets.TESTRAIL_USERNAME }}
        TESTRAIL_API_KEY: ${{ secrets.TESTRAIL_API_KEY }}

  performance-tests:
    runs-on: ubuntu-latest
    needs: e2e-tests
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup k6
      run: |
        sudo gpg -k
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
    
    - name: Run k6 load tests
      run: k6 run load-tests/fanvue-load-test.js
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: k6-results
        path: k6-results.json

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security headers check
      run: |
        npm install -g @zaproxy/cli
        zap-cli quick-scan --self-contained https://www.fanvue.com

  report-to-sentry:
    runs-on: ubuntu-latest
    needs: [e2e-tests, performance-tests]
    if: failure()
    
    steps:
    - name: Send failure notification to Sentry
      run: |
        curl -X POST \
          -H 'Authorization: Bearer ${{ secrets.SENTRY_AUTH_TOKEN }}' \
          -H 'Content-Type: application/json' \
          -d '{
            "message": "QA Pipeline failed for Fanvue.com",
            "level": "error",
            "tags": {
              "pipeline": "qa",
              "site": "fanvue.com",
              "branch": "${{ github.ref_name }}"
            }
          }' \
          https://sentry.io/api/0/projects/${{ secrets.SENTRY_ORG }}/fanvue/events/